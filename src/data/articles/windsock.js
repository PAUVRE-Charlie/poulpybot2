/* This file store an article used in this website */

/* React imports */
import { Link } from 'react-scroll';
import MathJax from 'react-mathjax';

/* Styles imports */
import './articleStyle.css';

/* Data imports */
import images from '../images';

const article = {
	title: 'Dispositif pour hisser les pavillons',
	image: images.windsock.blueprint,
	author: 'Alexis Hamel',
	preview:
		"L‚Äôobjectif de ce dispositif est de hisser deux pavillons de surface sup√©rieur √† 30 cm2 chacun au-del√† d‚Äôune hauteur de 35cm dans les 5 derni√®res secondes du match. Cette mission permet de rapporter 10 points lors de la coupe si elle est r√©ussie.",
	body: (
        <MathJax.Provider>
            <div className="article">
                <div className="contents">
                    <img src={images.electronique} alt="backgroundTableOfContents" />
                    <h1>Sommaire</h1>
                    <div>
                        <Link to="windsockObjective">Objectif</Link>
                        <Link to="windsockPhysics">Consid√©rations physiques</Link>
                        <Link to="windsockModelisation">Mod√©lisation</Link>
                        <Link to="windsockExperiences">Exp√©riences</Link>
                        <Link to="windsockConclusion">Conclusion et perspectives</Link>
                        <Link to="windsockLinks">Bibliographie</Link>
                    </div>
                </div>
                <h2 id="windsockObjective">1. Objectif</h2>
                <p>L‚Äôobjectif de ce dispositif est de hisser deux pavillons de surface sup√©rieur √† 30 cm2 chacun au-del√† d‚Äôune hauteur de 35cm dans les 5 derni√®res secondes du match. Cette mission permet de rapporter 10 points lors de la coupe si elle est r√©ussie.</p>
                
                <h2 id="windsockPhysics">2. Consid√©rations physiques</h2>
                <p>Pour atteindre cet objectif, nous allons mettre en ≈ìuvre un dispositif qui s‚Äôapparente √† une glissi√®re qui coulisse dans son support. Cette glissi√®re sera projet√©e en l‚Äôair gr√¢ce √† un ressort et maintenue en l‚Äôair gr√¢ce √† un aimant. Commen√ßons par mod√©liser th√©oriquement notre glissi√®re. On assimilera cette glissi√®re par un point mat√©riel dans un premier temps de masse m pos√©e sur un support de masse m‚Äô et on ne prendra pas en compte les frottements. Le sch√©ma suivant illustre la situation de d√©part √† gauche et la situation finale √† droite. On prendra comme origine la position √† l‚Äô√©quilibre du syst√®me.</p>
                <br/><img src={images.windsock.blueprint} style={{width:'40%', margin: '0 30%'}} alt="blueprint" /><br/><br/>
                <br/><span>On appuie ensuite √† <MathJax.Node inline formula={`t=0`} /> sur sur le plateau qui se d√©place vers le bas d‚Äôune distance d et on le l√¢che sans vitesse initiale.</span>
                <br/><br/><span>L‚Äôallongement alg√©brique <MathJax.Node inline formula={`ùö´z_{eq}`} /> du ressort lorsque l‚Äôensemble est √† l‚Äô√©quilibre est:</span>
                <MathJax.Node formula={`ùö´z_{eq} = - \\frac{m+m'}{k}*g`}/>
                <span>L‚Äô√©quation diff√©rentielle r√©gissant les oscillations est: </span><br/><br/>
                <MathJax.Node inline formula={`\\ddot{z} + \\frac{k}{m+m'}z = 0`} />
                <span> avec comme pulsation de r√©f√©rence: </span>
                <MathJax.Node inline formula={`\\omega_0^2=\\frac{k}{m+m'}`} />
                <br/><br/><span>La loi horaire est de la forme: </span>
                <MathJax.Node inline formula={`z(t)=-d \\cos{(\\omega_0t)}`} /><br/><br/>
                <span>Int√©ressons nous maintenant √† la condition √† laquelle la masse va quitter le support.</span>
                <br/><br/><span>La r√©action du support prend la forme suivante: </span>
                <MathJax.Node inline formula={`R = m(d\\omega_0^2\\cos{(\\omega_0t)}+g)`} /><br/><br/>
                <span>La masse pourra d√©coller seulement si <MathJax.Node inline formula={`R=0`} />, ce qui revient √† ce que </span>
                <MathJax.Node inline formula={`-1\\le -\\frac{g}{d\\omega_0^2} \\le 1`} /><br/><br/>
                <span>Ce qui revient √† ce que </span>
                <MathJax.Node inline formula={`g < d\\omega_0^2`} /><br/><br/>
                <span>Cherchons maintenant √† d√©terminer la distance <MathJax.Node inline formula={`d`} /> que l‚Äôon doit enfoncer le ressort pour pouvoir obtenir la hauteur <MathJax.Node inline formula={`H`} /> d√©sir√©e.</span>
                <br/><br/><span>On utilise pour cela le th√©or√®me de l‚Äô√©nergie m√©canique en supposant aucune force externe ni non conservative. On obtient les relations suivantes:</span>
                <MathJax.Node formula={`E_{m,initiale} = E_{m,finale}`}/>
                <MathJax.Node formula={`\\frac{k(d+\\frac{(m+m')*g}{k})^2}{2}-m*g*d=m*g*H`}/>
                <span>Il reste plus qu‚Äô√† r√©soudre cette √©quation d‚Äôordre 2 en imposant la condition d‚Äôobtenir une valeur positive de <MathJax.Node inline formula={`d`} />.</span>
        
                <h2 id="windsockModelisation">3. Mod√©lisation</h2>
                <p>Nous avons mod√©lis√© sur le logiciel Autodesk Fusion 360 la glissi√®re, son support et la structure permettant de la faire glisser. Il s‚Äôagit d‚Äôune premi√®re mod√©lisation qui sera affin√©e par la suite en fonction des diff√©rents essais qui permettra de valider ou non la th√©orie. Les dimensions et le design sont amen√©s √† changer en fonction de la base mobile finale. La mod√©lisation √† gauche repr√©sente la glissi√®re totalement baiss√©e alors que celle de droite montre la glissi√®re relev√©e √† la hauteur attendue. Sur cette mod√©lisation ne sont pas repr√©sent√©s le ressort, le support et le moteur qui actionne le m√©canisme qui lib√©rera la glissi√®re au moment attendu.</p>
                <br/><div className="multipleImages">
                    <img src={images.windsock.model1} alt="model1" style={{width: '40%'}}/>
                    <img src={images.windsock.model2} alt="model2" style={{width: '30%'}}/>
                </div><br/>

                <h2 id="windsockExperiences">4. Exp√©riences</h2>
                <p>La premi√®re exp√©rience consistera √† v√©rifier la hauteur atteinte par la glissi√®re gr√¢ce √† l‚Äôimpulsion initiale donn√©e au ressort ainsi que de v√©rifier le temps mis par la glissi√®re pour atteindre cette hauteur. La seconde exp√©rience consistera quant √† elle √† tester le m√©canisme qui lib√©rera la glissi√®re gr√¢ce √† l‚Äôaction du moteur et √† valider le m√©canisme d‚Äôarr√™t de la glissi√®re √† la hauteur souhait√©e.</p>
                
                <h2 id="windsockConclusion">5. Conclusion et perspectives</h2>
                <p>En l‚Äô√©tat actuel des choses, il reste √† imprimer les pi√®ces de la mod√©lisation et √† commander le mat√©riel pour r√©aliser les exp√©riences au mois de Janvier.</p>
                
                <h2 id="windsockLinks">6. Bibliographie</h2>
                <a href="https://www.camerecole.org/classes/135-correction-les-oscillateurs-mecaniques.html#les-oscillateurs-mecaniques-13">Concept th√©orique</a> (Exercice VII)
                <br/><br/><span>Mod√©lisation librement inspir√©e de l'√©quipe des Karibous</span>
            </div>
        </MathJax.Provider>
		
	)
};

export default article;
